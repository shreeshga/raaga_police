Index: RaagaList.h
===================================================================
--- RaagaList.h	(revision 12)
+++ RaagaList.h	(working copy)
@@ -10,7 +10,8 @@
 #import <QuartzCore/QuartzCore.h>
 
 @class SwaraBallDelegate;
-@interface RaagaList : UIView {
+@interface RaagaList : UIView <UIScrollViewDelegate> {
+	UIScrollView *ragaListScrollView;
 	SwaraBallDelegate* swaraDelegate;
 	NSMutableArray* swaraBalls;
 
@@ -20,6 +21,7 @@
 	bool isBouncing;
 }
 
+@property (nonatomic, retain) UIScrollView* ragaListScrollView;
 @property (nonatomic,assign) NSMutableArray* labels;
 @property (nonatomic,assign) int* hitList;
 @property (nonatomic,assign) bool isBouncing;
Index: SwaraBallDelegate.m
===================================================================
--- SwaraBallDelegate.m	(revision 12)
+++ SwaraBallDelegate.m	(working copy)
@@ -60,12 +60,12 @@
 - (void)drawLayer:(CALayer *)layer inContext:(CGContextRef)ctx {
     CGContextSaveGState(ctx);
     CGRect bounds = layer.bounds;
-		//get the index of the Ball
+	//get the index of the Ball
 	NSUInteger indx = layer.position.x / 50;
 	NSMutableArray* lab = [parent labels];
 	
-	if(layer.position.y / 50)
-		indx+=6;
+//	if(layer.position.y / 50)
+//		indx+=6;
 	NSString* strin = [lab objectAtIndex:indx];
 	char* str = [strin cStringUsingEncoding:NSASCIIStringEncoding];
 	
Index: RaagaList.m
===================================================================
--- RaagaList.m	(revision 12)
+++ RaagaList.m	(working copy)
@@ -21,25 +21,47 @@
     return self;
 }
 
+- (void) createScrollView {
+	// Initialize the scroll view with the same size as this view.
+	ragaListScrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0.0f, 0.0f, self.frame.size.width, 150)];
+	
+	// Set behaviour for the scrollview
+	ragaListScrollView.backgroundColor = [UIColor clearColor];
+	ragaListScrollView.showsHorizontalScrollIndicator = FALSE;
+	ragaListScrollView.showsVerticalScrollIndicator = FALSE;
+	ragaListScrollView.scrollEnabled = YES;
+	ragaListScrollView.bounces = FALSE;
+	ragaListScrollView.opaque = FALSE;
+	// Add ourselves as delegate receiver so we can detect when the user is scrolling.
+	ragaListScrollView.delegate = self;
+	[ragaListScrollView setContentSize:CGSizeMake(600, 150)];
+}
+
+
 - (void) createBalls:(NSMutableArray*) raaga {
 	CAShapeLayer* swara;
 	labels = [raaga retain];
 	hitList = malloc(sizeof(int) * [labels count]);
 	isBouncing=0;
 
+	//Create ScrollView
+	[self createScrollView];
 	for(int i=0; i < [labels count]; i++) {
 		swara = [[CALayer alloc] init];
 		swara.bounds = CGRectMake(0, 0, 50, 50);
-		swara.position = CGPointMake(50*(i%6), 50*(i> 5?1:0));
+//		swara.position = CGPointMake(50*(i%6), 50*(i> 5?1:0));
+		swara.position = CGPointMake(50*i+25, 125);
 		swaraDelegate = [[SwaraBallDelegate alloc] init];
 		swaraDelegate.parent = self;
 		swara.delegate = swaraDelegate;
 		[swara setNeedsDisplay];
-		[self.layer addSublayer:swara];
+//		[self.layer addSublayer:swara];
+		[ragaListScrollView.layer addSublayer:swara];		
 		[swaraBalls addObject:swara];
 		[swara release];
 		hitList[i] = 0;
 	}
+	[self addSubview:ragaListScrollView];
 }
 
 - (void) bounceBallAtIndex:(NSUInteger) index {
@@ -50,19 +72,22 @@
 	
 	BOOL stopBouncing = NO;
 	CGFloat originalOffsetX = 0;
-	CGFloat originalOffsetY = 150-50*(index>5?1:0);
+//	CGFloat originalOffsetY = 150-50*(index>5?1:0);
+	CGFloat originalOffsetY = 100;
 	CGFloat offsetDivider = 1.5;
 	
 	CGMutablePathRef path = CGPathCreateMutable();
-	CGPathMoveToPoint(path, NULL, 50*(index % 6),50*(index>5?1:0));
+//	CGPathMoveToPoint(path, NULL, 50*(index % 6),50*(index>5?1:0));
+	CGPathMoveToPoint(path, NULL, 50*(index)+25,125);
 
 	hitList[index] = 1;
 	// Add to the bounce path in decreasing excursions from the center
 	while (stopBouncing != YES) {
-		CGPathAddLineToPoint(path, NULL, 50*(index%6) , 0 - originalOffsetY/offsetDivider);
-		CGPathAddLineToPoint(path, NULL, 50*(index%6), 50*(index>5?1:0));
+		CGPathAddLineToPoint(path, NULL, 50*(index)+25 , 0 - originalOffsetY/offsetDivider);
+//		CGPathAddLineToPoint(path, NULL, 50*(index%6), 50*(index>5?1:0));
+		CGPathAddLineToPoint(path, NULL, 50*(index)+25,125);
 		
-		offsetDivider += 4;
+		offsetDivider += 8;
 		animationDuration += 1/offsetDivider;
 		if ((abs(originalOffsetX/offsetDivider) < 10) && (abs(originalOffsetY/offsetDivider) < 10)) {
 			stopBouncing = YES;
@@ -103,9 +128,33 @@
 
 }
 
+- (void)scrollViewDidScroll:(UIScrollView *)scrollView
+{
+	// if the offset is less than 3, the content is scrolled to the far left. This would be the time to show/hide
+	// an arrow that indicates that you can scroll to the right. The 3 is to give it some "padding".
+	if(scrollView.contentOffset.x <= 3)
+	{
+		NSLog(@"Scroll is as far left as possible");
+	}
+	// The offset is always calculated from the bottom left corner, which means when the scroll is as far
+	// right as possible it will not give an offset that is equal to the entire width of the content. Example:
+	// The content has a width of 500, the scroll view has the width of 200. Then the content offset for far right
+	// would be 300 (500-200). Then I remove 3 to give it some "padding"
+	else if(scrollView.contentOffset.x >= (scrollView.contentSize.width - scrollView.frame.size.width)-3)
+	{
+		NSLog(@"Scroll is as far right as possible");
+	}
+	else
+	{
+		// The scoll is somewhere in between left and right. This is the place to indicate that the 
+		// use can scroll both left and right
+	}
+	
+}
 
 
 
+
 /*
 // Only override drawRect: if you perform custom drawing.
 // An empty implementation adversely affects performance during animation.
@@ -117,6 +166,7 @@
 - (void)dealloc {
 	[swaraBalls dealloc];
 	free(hitList);
+	[ragaListScrollView release];
     [super dealloc];
 }
 
Index: pitch.hh
===================================================================
--- pitch.hh	(revision 12)
+++ pitch.hh	(working copy)
@@ -31,7 +31,7 @@
 static inline bool operator<(Tone const& lhs, Tone const& rhs) { return lhs.freq < rhs.freq && lhs != rhs; }
 static inline bool operator>(Tone const& lhs, Tone const& rhs) { return lhs.freq > rhs.freq && lhs != rhs; }
 
-static const unsigned FFT_P = 11;
+static const unsigned FFT_P = 10;
 static const std::size_t FFT_N = 1 << FFT_P;
 static const std::size_t BUF_N = 2 * FFT_N; //2
 
Index: RaagaPoliceViewController.mm
===================================================================
--- RaagaPoliceViewController.mm	(revision 12)
+++ RaagaPoliceViewController.mm	(working copy)
@@ -55,6 +55,30 @@
 		}
 }
 
+//-(void) loadRaagaList
+//{
+//
+//	NSString *jsonString = [[NSString alloc] initWithContentsOfFile:(NSString*)path encoding:NSUTF8StringEncoding];
+//	NSError* error;
+//	SBJSON *json = [[SBJSON new] autorelease];
+//	NSDictionary *concerts = [json objectWithString:jsonString error:&error];
+//	
+//	if(concerts == nil){
+//		UIAlertView *errorView = [[UIAlertView alloc] initWithTitle:NSLocalizedString(@"Oops", @"No Data")
+//															message:@"No Concerts Available" 
+//														   delegate:nil 
+//													cancelButtonTitle:NSLocalizedString(@"OK", @"OK") otherButtonTitles:nil];
+//		[errorView show];
+//		[errorView release];
+//		self.objData = nil;
+//		return;
+//	}
+//	//NSDictionary *concerts = [jsonString JSONValue];
+//	self.jsonArray = [concerts objectForKey:@"Shows"];
+//	[self.conTable reloadData];
+//}
+
+
 - (IBAction)showOptions:(id)sender
 {
 	currIndex = 0;
@@ -107,13 +131,13 @@
 #pragma mark PickerView
 
 - (NSString *)pickerView:(UIPickerView *)pickerView titleForRow:(NSInteger)row forComponent:(NSInteger)component{
-	return (NSString*)[currentData objectAtIndex:row+1];
+	return (NSString*)[currentData objectAtIndex:row];
 }
 - (NSInteger)numberOfComponentsInPickerView:(UIPickerView *)pickerView{
 	return 1;
 }
 - (NSInteger)pickerView:(UIPickerView *)pickerView numberOfRowsInComponent:(NSInteger)component{
-	return [currentData count] - 1;
+	return [currentData count];
 }
 
 - (void)pickerView:(UIPickerView *)pickerView didSelectRow:(NSInteger)row inComponent:(NSInteger)component
@@ -188,7 +212,7 @@
 //	[self.view addSubview:slideMenuView];
 //	[self.view bringSubviewToFront:slideMenuView];
 
-	raagaList = [[RaagaList alloc] initWithFrame:CGRectMake(40.0f,270.0f,320.0f,150.0f)];
+	raagaList = [[RaagaList alloc] initWithFrame:CGRectMake(5.0f,230.0f,320.0f,150.0f)];
 //	[self.view addSubview:raagaList];
 	[raagaList createBalls:hamsaDhvaniRaaga];
 
